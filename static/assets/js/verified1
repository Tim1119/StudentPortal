function getCookie(name) {
    let cookieValue = null;
    if (document.cookie && document.cookie !== '') {
        const cookies = document.cookie.split(';');
        for (let i = 0; i < cookies.length; i++) {
            const cookie = cookies[i].trim();
            // Does this cookie string begin with the name we want?
            if (cookie.substring(0, name.length + 1) === (name + '=')) {
                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                break;
            }
        }
    }
    return cookieValue;
}
const csrftoken = getCookie('csrftoken');



const usernameSuccessOutput = document.getElementById('usernameSuccessOutput')
const usernameFeedBackArea = document.getElementById('username-invalid-feedback')
const usernameField = document.getElementById('yourUsername');
    usernameField.addEventListener('keyup', function (e) {
    const usernameVal = e.target.value;
    usernameSuccessOutput.style.display = 'block'
    usernameSuccessOutput.textContent = `Checking ${usernameVal}`

    usernameField.classList.remove('is-invalid')

    if (usernameVal.length > 0 ){

        fetch('/accounts/validate-username/', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRFToken': csrftoken,
            },
            body: JSON.stringify({
                username: usernameVal,
            })
        })
        .then((response) => {
            return response.json();
        })
        .then((data) => {
            usernameSuccessOutput.style.display = 'none'
            console.log({'data':data})
            if (data.username_error) {
                usernameField.classList.add('is-invalid')
                usernameFeedBackArea.innerHTML = `<p>${data.username_error}</p>`
            }
                     
        })        
    }
})

